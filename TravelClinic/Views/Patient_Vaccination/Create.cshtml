@model asp.netmvc5.Models.Patient_Vaccination

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@{<link rel="stylesheet" href="//code.jquery.com/ui/1.11.3/themes/smoothness/jquery-ui.css">

        <script type="text/javascript">
    $(document).ready(function () {


        $('#Barcode_NDC').autocomplete({
            source: '@Url.Action("GetNDC")',
            focus: function( event, ui ) {
                $("#Barcode_NDC").val(ui.item.Barcode_NDC);
                return false;
            },
            select: function( event, ui ) {
                $("#VaccineID").val(ui.item.VaccineID);
                return false;
            },
            _resizeMenu: function() {
                this.menu.element.outerWidth( 500 );
            }
        })
            .autocomplete("instance")._renderItem = function (ul, item) {
                return $("<li>")
                  .append("<a>" + item.VaccineID + "<br>" + item.Barcode_NDC + "<br>" + item.Description + "</a>")
                  .appendTo(ul);
            };
    });
        @*$('#Description').autocomplete({
            source: '@Url.Action("GetDescription")',
            _resizeMenu: function () {
                this.menu.element.outerWidth(500);
            }
        });*@
            $(function () {
            var d = new Date();

            var month = d.getMonth() + 1;
            var day = d.getDate();

            var output = d.getFullYear() + '/' +
                (month < 10 ? '0' : '') + month + '/' +
                (day < 10 ? '0' : '') + day;
            });

            $(function () {
            
                var myDate = new Date();
                var prettyDate = (myDate.getMonth() + 1) + '/' + myDate.getDate() + '/' +
                        myDate.getFullYear() + " " + myDate.getHours() + ":" + myDate.getMinutes();
                $("#Date_Administered").datepicker({ defaultDate: new Date() });
                $("#Date_Administered").val(prettyDate);
                $("#UserName").val('@User.Identity.Name');
           });


        </script>
    }

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Patient_Vaccination</h4>
        <hr />
        @Html.ValidationSummary(true)
        @*<div class="form-group">
            @Html.LabelFor(model => model.VaccineID, "VaccineID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("VaccineID", String.Empty)
                @Html.ValidationMessageFor(model => model.VaccineID)
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Barcode_NDC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Barcode_NDC)
                @Html.ValidationMessageFor(model => model.Barcode_NDC)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.VaccineID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VaccineID)
                @Html.ValidationMessageFor(model => model.VaccineID)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RefugeeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RefugeeId)
                @Html.ValidationMessageFor(model => model.RefugeeId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName)
                @Html.ValidationMessageFor(model => model.UserName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price_Paid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price_Paid)
                @Html.ValidationMessageFor(model => model.Price_Paid)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Site_Administered, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Site_Administered)
                @Html.ValidationMessageFor(model => model.Site_Administered)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date_Administered, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date_Administered)
                @Html.ValidationMessageFor(model => model.Date_Administered)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
